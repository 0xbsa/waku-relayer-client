{"version":3,"file":"conversion.js","sourceRoot":"","sources":["../../src/utils/conversion.ts"],"names":[],"mappings":";;;AAAO,MAAM,eAAe,GAAG,CAAC,OAAe,EAAU,EAAE;IACzD,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC3C,OAAO,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC1C,CAAC,CAAC;AAHW,QAAA,eAAe,mBAG1B;AAEK,MAAM,WAAW,GAAG,CAAC,KAAiB,EAAU,EAAE;IACvD,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC7C,CAAC,CAAC;AAFW,QAAA,WAAW,eAEtB;AAEK,MAAM,UAAU,GAAG,CAAC,KAAiB,EAAU,EAAE;IACtD,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC5C,CAAC,CAAC;AAFW,QAAA,UAAU,cAErB;AAEK,MAAM,WAAW,GAAG,CAAC,IAAY,EAAc,EAAE;IACtD,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACnC,CAAC,CAAC;AAFW,QAAA,WAAW,eAEtB","sourcesContent":["export const hexToUTF8String = (hexData: string): string => {\n  const buffer = Buffer.from(hexData, 'hex');\n  return new TextDecoder().decode(buffer);\n};\n\nexport const bytesToUtf8 = (bytes: Uint8Array): string => {\n  return Buffer.from(bytes).toString('utf8');\n};\n\nexport const bytesToHex = (bytes: Uint8Array): string => {\n  return Buffer.from(bytes).toString('hex');\n};\n\nexport const utf8ToBytes = (utf8: string): Uint8Array => {\n  return Buffer.from(utf8, 'utf8');\n};\n"]}